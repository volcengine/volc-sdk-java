// Code generated by protoc-gen-volcengine-sdk
// source: uploadMediaByUrl
// DO NOT EDIT!

package com.volcengine.example.vod.upload;

import com.volcengine.service.vod.IVodService;
import com.volcengine.service.vod.impl.VodServiceImpl;
import com.volcengine.service.vod.model.business.VodUploadTemplate;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VodUploadMediaByUrlDemo {

    public static void main(String[] args) throws Exception {
        // Create a VOD instance in the specified region.
        // IVodService vodService = VodServiceImpl.getInstance("cn-north-1");
        IVodService vodService = VodServiceImpl.getInstance();

        // Configure your Access Key ID (AK) and Secret Access Key (SK) in the environment variables or in the local ~/.volc/config file. For detailed instructions, see https://www.volcengine.com/docs/4/65641.
        // The SDK will automatically fetch the AK and SK from the environment variables or the ~/.volc/config file as needed.
        // During testing, you may use the following code snippet. However, do not store the AK and SK directly in your project code to prevent potential leakage and safeguard the security of all resources associated with your account.
        // vodService.setAccessKey("your ak");
        // vodService.setSecretKey("your sk");

        try {
            com.volcengine.service.vod.model.request.VodUrlUploadRequest.Builder reqBuilder = com.volcengine.service.vod.model.request.VodUrlUploadRequest.newBuilder();
			reqBuilder.setSpaceName("your space");
			com.volcengine.service.vod.model.business.VodUrlUploadURLSet.Builder uRLSetsBuilder = com.volcengine.service.vod.model.business.VodUrlUploadURLSet.newBuilder();
			uRLSetsBuilder.setSourceUrl("");
            uRLSetsBuilder.setStorageClass(0);
            uRLSetsBuilder.setFileExtension(".mp4");
            uRLSetsBuilder.setCallbackArgs("my java callback args");
            Map<String, String> customUrlHeaders = new HashMap<>();
            customUrlHeaders.put("your header key", "your header value");
            uRLSetsBuilder.putAllCustomURLHeaders(customUrlHeaders);
            VodUploadTemplate impTemplate = VodUploadTemplate.newBuilder()
                    .addTemplateIds("imp template id")
                    .setTemplateType("imp")
                    .build();
            VodUploadTemplate transcodeTemplate = VodUploadTemplate.newBuilder()
                    .addTemplateIds( "transcode template id")
                    .setTemplateType("transcode")
                    .build();
            uRLSetsBuilder.addTemplates(impTemplate);
            uRLSetsBuilder.addTemplates(transcodeTemplate);
            reqBuilder.addURLSets(uRLSetsBuilder);

            com.volcengine.service.vod.model.response.VodUrlUploadResponse resp = vodService.uploadMediaByUrl(reqBuilder.build());
            if (resp.getResponseMetadata().hasError()) {
                System.out.println(resp.getResponseMetadata().getError());
                System.exit(-1);
            }
            System.out.println(resp);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}