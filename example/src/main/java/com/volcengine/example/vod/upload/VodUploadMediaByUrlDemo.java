// Code generated by protoc-gen-volcengine-sdk
// source: uploadMediaByUrl
// DO NOT EDIT!

package com.volcengine.example.vod.upload;

import com.volcengine.service.vod.IVodService;
import com.volcengine.service.vod.impl.VodServiceImpl;
import com.volcengine.service.vod.model.business.VodUploadTemplate;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VodUploadMediaByUrlDemo {

    public static void main(String[] args) throws Exception {
        IVodService vodService = VodServiceImpl.getInstance();
        vodService.setAccessKey("your ak");
        vodService.setSecretKey("your sk");

        try {
            com.volcengine.service.vod.model.request.VodUrlUploadRequest.Builder reqBuilder = com.volcengine.service.vod.model.request.VodUrlUploadRequest.newBuilder();
			reqBuilder.setSpaceName("your space");
			com.volcengine.service.vod.model.business.VodUrlUploadURLSet.Builder uRLSetsBuilder = com.volcengine.service.vod.model.business.VodUrlUploadURLSet.newBuilder();
			uRLSetsBuilder.setSourceUrl("");
            uRLSetsBuilder.setStorageClass(0);
            uRLSetsBuilder.setFileExtension(".mp4");
            uRLSetsBuilder.setCallbackArgs("my java callback args");
            Map<String, String> customUrlHeaders = new HashMap<>();
            customUrlHeaders.put("your header key", "your header value");
            uRLSetsBuilder.putAllCustomURLHeaders(customUrlHeaders);
            VodUploadTemplate impTemplate = VodUploadTemplate.newBuilder()
                    .addTemplateIds("imp template id")
                    .setTemplateType("imp")
                    .build();
            VodUploadTemplate transcodeTemplate = VodUploadTemplate.newBuilder()
                    .addTemplateIds( "transcode template id")
                    .setTemplateType("transcode")
                    .build();
            uRLSetsBuilder.addTemplates(impTemplate);
            uRLSetsBuilder.addTemplates(transcodeTemplate);
            reqBuilder.addURLSets(uRLSetsBuilder);

            com.volcengine.service.vod.model.response.VodUrlUploadResponse resp = vodService.uploadMediaByUrl(reqBuilder.build());
            if (resp.getResponseMetadata().hasError()) {
                System.out.println(resp.getResponseMetadata().getError());
                System.exit(-1);
            }
            System.out.println(resp);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}