// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: volcengine/vod/request/request_vod.proto

package com.volcengine.service.vod.model.request;

/**
 * Protobuf type {@code Volcengine.Vod.Models.Request.VodGetPlayInfoRequest}
 */
public final class VodGetPlayInfoRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Volcengine.Vod.Models.Request.VodGetPlayInfoRequest)
    VodGetPlayInfoRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VodGetPlayInfoRequest.newBuilder() to construct.
  private VodGetPlayInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VodGetPlayInfoRequest() {
    vid_ = "";
    format_ = "";
    codec_ = "";
    definition_ = "";
    fileType_ = "";
    logoType_ = "";
    base64_ = "";
    ssl_ = "";
    needThumbs_ = "";
    needBarrageMask_ = "";
    cdnType_ = "";
    unionInfo_ = "";
    hDRDefinition_ = "";
    playScene_ = "";
    drmExpireTimestamp_ = "";
    quality_ = "";
    playConfig_ = "";
    needOriginal_ = "";
    forceExpire_ = "";
    digitalWatermarkType_ = "";
    userToken_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VodGetPlayInfoRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VodGetPlayInfoRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            vid_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            format_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            codec_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            definition_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            fileType_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            logoType_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            base64_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            ssl_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            needThumbs_ = s;
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            needBarrageMask_ = s;
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            cdnType_ = s;
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            unionInfo_ = s;
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            hDRDefinition_ = s;
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();

            playScene_ = s;
            break;
          }
          case 122: {
            java.lang.String s = input.readStringRequireUtf8();

            drmExpireTimestamp_ = s;
            break;
          }
          case 130: {
            java.lang.String s = input.readStringRequireUtf8();

            quality_ = s;
            break;
          }
          case 138: {
            java.lang.String s = input.readStringRequireUtf8();

            playConfig_ = s;
            break;
          }
          case 146: {
            java.lang.String s = input.readStringRequireUtf8();

            needOriginal_ = s;
            break;
          }
          case 154: {
            java.lang.String s = input.readStringRequireUtf8();

            forceExpire_ = s;
            break;
          }
          case 160: {

            getAll_ = input.readBool();
            break;
          }
          case 170: {
            java.lang.String s = input.readStringRequireUtf8();

            digitalWatermarkType_ = s;
            break;
          }
          case 178: {
            java.lang.String s = input.readStringRequireUtf8();

            userToken_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodGetPlayInfoRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodGetPlayInfoRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.class, com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.Builder.class);
  }

  public static final int VID_FIELD_NUMBER = 1;
  private volatile java.lang.Object vid_;
  /**
   * <pre>
   * 视频ID 
   * </pre>
   *
   * <code>string Vid = 1;</code>
   * @return The vid.
   */
  @java.lang.Override
  public java.lang.String getVid() {
    java.lang.Object ref = vid_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vid_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 视频ID 
   * </pre>
   *
   * <code>string Vid = 1;</code>
   * @return The bytes for vid.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVidBytes() {
    java.lang.Object ref = vid_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      vid_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORMAT_FIELD_NUMBER = 2;
  private volatile java.lang.Object format_;
  /**
   * <pre>
   * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
   * </pre>
   *
   * <code>string Format = 2;</code>
   * @return The format.
   */
  @java.lang.Override
  public java.lang.String getFormat() {
    java.lang.Object ref = format_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      format_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
   * </pre>
   *
   * <code>string Format = 2;</code>
   * @return The bytes for format.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFormatBytes() {
    java.lang.Object ref = format_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      format_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODEC_FIELD_NUMBER = 3;
  private volatile java.lang.Object codec_;
  /**
   * <pre>
   * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
   * </pre>
   *
   * <code>string Codec = 3;</code>
   * @return The codec.
   */
  @java.lang.Override
  public java.lang.String getCodec() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      codec_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
   * </pre>
   *
   * <code>string Codec = 3;</code>
   * @return The bytes for codec.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCodecBytes() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      codec_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFINITION_FIELD_NUMBER = 4;
  private volatile java.lang.Object definition_;
  /**
   * <pre>
   * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
   * </pre>
   *
   * <code>string Definition = 4;</code>
   * @return The definition.
   */
  @java.lang.Override
  public java.lang.String getDefinition() {
    java.lang.Object ref = definition_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      definition_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
   * </pre>
   *
   * <code>string Definition = 4;</code>
   * @return The bytes for definition.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefinitionBytes() {
    java.lang.Object ref = definition_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      definition_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILETYPE_FIELD_NUMBER = 5;
  private volatile java.lang.Object fileType_;
  /**
   * <pre>
   * 流文件类型,支持:
   * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
   * </pre>
   *
   * <code>string FileType = 5;</code>
   * @return The fileType.
   */
  @java.lang.Override
  public java.lang.String getFileType() {
    java.lang.Object ref = fileType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 流文件类型,支持:
   * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
   * </pre>
   *
   * <code>string FileType = 5;</code>
   * @return The bytes for fileType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileTypeBytes() {
    java.lang.Object ref = fileType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOGOTYPE_FIELD_NUMBER = 6;
  private volatile java.lang.Object logoType_;
  /**
   * <pre>
   * 水印贴片标签 
   * </pre>
   *
   * <code>string LogoType = 6;</code>
   * @return The logoType.
   */
  @java.lang.Override
  public java.lang.String getLogoType() {
    java.lang.Object ref = logoType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logoType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 水印贴片标签 
   * </pre>
   *
   * <code>string LogoType = 6;</code>
   * @return The bytes for logoType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogoTypeBytes() {
    java.lang.Object ref = logoType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      logoType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BASE64_FIELD_NUMBER = 7;
  private volatile java.lang.Object base64_;
  /**
   * <pre>
   * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
   * </pre>
   *
   * <code>string Base64 = 7;</code>
   * @return The base64.
   */
  @java.lang.Override
  public java.lang.String getBase64() {
    java.lang.Object ref = base64_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      base64_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
   * </pre>
   *
   * <code>string Base64 = 7;</code>
   * @return The bytes for base64.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBase64Bytes() {
    java.lang.Object ref = base64_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      base64_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SSL_FIELD_NUMBER = 8;
  private volatile java.lang.Object ssl_;
  /**
   * <pre>
   * 返回https播放地址，默认否, 1-是；0-否 
   * </pre>
   *
   * <code>string Ssl = 8;</code>
   * @return The ssl.
   */
  @java.lang.Override
  public java.lang.String getSsl() {
    java.lang.Object ref = ssl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ssl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 返回https播放地址，默认否, 1-是；0-否 
   * </pre>
   *
   * <code>string Ssl = 8;</code>
   * @return The bytes for ssl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSslBytes() {
    java.lang.Object ref = ssl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ssl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDTHUMBS_FIELD_NUMBER = 9;
  private volatile java.lang.Object needThumbs_;
  /**
   * <pre>
   * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedThumbs = 9;</code>
   * @return The needThumbs.
   */
  @java.lang.Override
  public java.lang.String getNeedThumbs() {
    java.lang.Object ref = needThumbs_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needThumbs_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedThumbs = 9;</code>
   * @return The bytes for needThumbs.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedThumbsBytes() {
    java.lang.Object ref = needThumbs_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needThumbs_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDBARRAGEMASK_FIELD_NUMBER = 10;
  private volatile java.lang.Object needBarrageMask_;
  /**
   * <pre>
   * 是否需要蒙版弹幕，默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedBarrageMask = 10;</code>
   * @return The needBarrageMask.
   */
  @java.lang.Override
  public java.lang.String getNeedBarrageMask() {
    java.lang.Object ref = needBarrageMask_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needBarrageMask_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 是否需要蒙版弹幕，默认否，1-是；0-否 
   * </pre>
   *
   * <code>string NeedBarrageMask = 10;</code>
   * @return The bytes for needBarrageMask.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedBarrageMaskBytes() {
    java.lang.Object ref = needBarrageMask_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needBarrageMask_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CDNTYPE_FIELD_NUMBER = 11;
  private volatile java.lang.Object cdnType_;
  /**
   * <pre>
   * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string CdnType = 11;</code>
   * @return The cdnType.
   */
  @java.lang.Override
  public java.lang.String getCdnType() {
    java.lang.Object ref = cdnType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cdnType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string CdnType = 11;</code>
   * @return The bytes for cdnType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCdnTypeBytes() {
    java.lang.Object ref = cdnType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cdnType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UNIONINFO_FIELD_NUMBER = 12;
  private volatile java.lang.Object unionInfo_;
  /**
   * <pre>
   * 唯一性标识信息, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string UnionInfo = 12;</code>
   * @return The unionInfo.
   */
  @java.lang.Override
  public java.lang.String getUnionInfo() {
    java.lang.Object ref = unionInfo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      unionInfo_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 唯一性标识信息, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string UnionInfo = 12;</code>
   * @return The bytes for unionInfo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUnionInfoBytes() {
    java.lang.Object ref = unionInfo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      unionInfo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HDRDEFINITION_FIELD_NUMBER = 13;
  private volatile java.lang.Object hDRDefinition_;
  /**
   * <pre>
   * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
   * 1080p, 2k, 4k 
   * </pre>
   *
   * <code>string HDRDefinition = 13;</code>
   * @return The hDRDefinition.
   */
  @java.lang.Override
  public java.lang.String getHDRDefinition() {
    java.lang.Object ref = hDRDefinition_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hDRDefinition_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
   * 1080p, 2k, 4k 
   * </pre>
   *
   * <code>string HDRDefinition = 13;</code>
   * @return The bytes for hDRDefinition.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHDRDefinitionBytes() {
    java.lang.Object ref = hDRDefinition_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hDRDefinition_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYSCENE_FIELD_NUMBER = 14;
  private volatile java.lang.Object playScene_;
  /**
   * <pre>
   * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
   * </pre>
   *
   * <code>string PlayScene = 14;</code>
   * @return The playScene.
   */
  @java.lang.Override
  public java.lang.String getPlayScene() {
    java.lang.Object ref = playScene_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      playScene_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
   * </pre>
   *
   * <code>string PlayScene = 14;</code>
   * @return The bytes for playScene.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPlaySceneBytes() {
    java.lang.Object ref = playScene_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      playScene_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DRMEXPIRETIMESTAMP_FIELD_NUMBER = 15;
  private volatile java.lang.Object drmExpireTimestamp_;
  /**
   * <pre>
   * DRM过期时间戳, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string DrmExpireTimestamp = 15;</code>
   * @return The drmExpireTimestamp.
   */
  @java.lang.Override
  public java.lang.String getDrmExpireTimestamp() {
    java.lang.Object ref = drmExpireTimestamp_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      drmExpireTimestamp_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * DRM过期时间戳, 若需使用请联系技术支持 
   * </pre>
   *
   * <code>string DrmExpireTimestamp = 15;</code>
   * @return The bytes for drmExpireTimestamp.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDrmExpireTimestampBytes() {
    java.lang.Object ref = drmExpireTimestamp_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      drmExpireTimestamp_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUALITY_FIELD_NUMBER = 16;
  private volatile java.lang.Object quality_;
  /**
   * <pre>
   * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
   * higher, highest.默认返回所有音频流
   * </pre>
   *
   * <code>string Quality = 16;</code>
   * @return The quality.
   */
  @java.lang.Override
  public java.lang.String getQuality() {
    java.lang.Object ref = quality_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      quality_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
   * higher, highest.默认返回所有音频流
   * </pre>
   *
   * <code>string Quality = 16;</code>
   * @return The bytes for quality.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getQualityBytes() {
    java.lang.Object ref = quality_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      quality_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PLAYCONFIG_FIELD_NUMBER = 17;
  private volatile java.lang.Object playConfig_;
  /**
   * <pre>
   *播放配置,可指定播放域名
   * </pre>
   *
   * <code>string PlayConfig = 17;</code>
   * @return The playConfig.
   */
  @java.lang.Override
  public java.lang.String getPlayConfig() {
    java.lang.Object ref = playConfig_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      playConfig_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *播放配置,可指定播放域名
   * </pre>
   *
   * <code>string PlayConfig = 17;</code>
   * @return The bytes for playConfig.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPlayConfigBytes() {
    java.lang.Object ref = playConfig_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      playConfig_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEEDORIGINAL_FIELD_NUMBER = 18;
  private volatile java.lang.Object needOriginal_;
  /**
   * <pre>
   *控制是否需要将原片信息置于 VideoInfos 中
   * </pre>
   *
   * <code>string NeedOriginal = 18;</code>
   * @return The needOriginal.
   */
  @java.lang.Override
  public java.lang.String getNeedOriginal() {
    java.lang.Object ref = needOriginal_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      needOriginal_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *控制是否需要将原片信息置于 VideoInfos 中
   * </pre>
   *
   * <code>string NeedOriginal = 18;</code>
   * @return The bytes for needOriginal.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNeedOriginalBytes() {
    java.lang.Object ref = needOriginal_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      needOriginal_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FORCEEXPIRE_FIELD_NUMBER = 19;
  private volatile java.lang.Object forceExpire_;
  /**
   * <pre>
   *强行指定本次请求的时间戳防盗链 单位秒
   * </pre>
   *
   * <code>string ForceExpire = 19;</code>
   * @return The forceExpire.
   */
  @java.lang.Override
  public java.lang.String getForceExpire() {
    java.lang.Object ref = forceExpire_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      forceExpire_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *强行指定本次请求的时间戳防盗链 单位秒
   * </pre>
   *
   * <code>string ForceExpire = 19;</code>
   * @return The bytes for forceExpire.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getForceExpireBytes() {
    java.lang.Object ref = forceExpire_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      forceExpire_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GETALL_FIELD_NUMBER = 20;
  private boolean getAll_;
  /**
   * <pre>
   *获取全部流 默认不开启 开启后将没有降级策略 返回Vid下的所有转码流
   * </pre>
   *
   * <code>bool GetAll = 20;</code>
   * @return The getAll.
   */
  @java.lang.Override
  public boolean getGetAll() {
    return getAll_;
  }

  public static final int DIGITALWATERMARKTYPE_FIELD_NUMBER = 21;
  private volatile java.lang.Object digitalWatermarkType_;
  /**
   * <pre>
   *"数字水印类型。取值：
   *ABTraceStream：AB流溯源水印。"
   * </pre>
   *
   * <code>string DigitalWatermarkType = 21;</code>
   * @return The digitalWatermarkType.
   */
  @java.lang.Override
  public java.lang.String getDigitalWatermarkType() {
    java.lang.Object ref = digitalWatermarkType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      digitalWatermarkType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *"数字水印类型。取值：
   *ABTraceStream：AB流溯源水印。"
   * </pre>
   *
   * <code>string DigitalWatermarkType = 21;</code>
   * @return The bytes for digitalWatermarkType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDigitalWatermarkTypeBytes() {
    java.lang.Object ref = digitalWatermarkType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      digitalWatermarkType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USERTOKEN_FIELD_NUMBER = 22;
  private volatile java.lang.Object userToken_;
  /**
   * <pre>
   *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
   * </pre>
   *
   * <code>string UserToken = 22;</code>
   * @return The userToken.
   */
  @java.lang.Override
  public java.lang.String getUserToken() {
    java.lang.Object ref = userToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
   * </pre>
   *
   * <code>string UserToken = 22;</code>
   * @return The bytes for userToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserTokenBytes() {
    java.lang.Object ref = userToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vid_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vid_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(format_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, format_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(codec_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, codec_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(definition_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, definition_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, logoType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(base64_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, base64_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ssl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, ssl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needThumbs_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, needThumbs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needBarrageMask_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, needBarrageMask_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cdnType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, cdnType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unionInfo_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, unionInfo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hDRDefinition_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, hDRDefinition_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playScene_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, playScene_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(drmExpireTimestamp_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, drmExpireTimestamp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quality_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, quality_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playConfig_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, playConfig_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needOriginal_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 18, needOriginal_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(forceExpire_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 19, forceExpire_);
    }
    if (getAll_ != false) {
      output.writeBool(20, getAll_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(digitalWatermarkType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 21, digitalWatermarkType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userToken_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 22, userToken_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vid_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vid_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(format_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, format_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(codec_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, codec_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(definition_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, definition_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(logoType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, logoType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(base64_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, base64_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ssl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, ssl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needThumbs_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, needThumbs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needBarrageMask_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, needBarrageMask_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cdnType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, cdnType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(unionInfo_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, unionInfo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hDRDefinition_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, hDRDefinition_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playScene_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, playScene_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(drmExpireTimestamp_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, drmExpireTimestamp_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(quality_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, quality_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(playConfig_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, playConfig_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(needOriginal_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, needOriginal_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(forceExpire_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, forceExpire_);
    }
    if (getAll_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(20, getAll_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(digitalWatermarkType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, digitalWatermarkType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userToken_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, userToken_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.volcengine.service.vod.model.request.VodGetPlayInfoRequest)) {
      return super.equals(obj);
    }
    com.volcengine.service.vod.model.request.VodGetPlayInfoRequest other = (com.volcengine.service.vod.model.request.VodGetPlayInfoRequest) obj;

    if (!getVid()
        .equals(other.getVid())) return false;
    if (!getFormat()
        .equals(other.getFormat())) return false;
    if (!getCodec()
        .equals(other.getCodec())) return false;
    if (!getDefinition()
        .equals(other.getDefinition())) return false;
    if (!getFileType()
        .equals(other.getFileType())) return false;
    if (!getLogoType()
        .equals(other.getLogoType())) return false;
    if (!getBase64()
        .equals(other.getBase64())) return false;
    if (!getSsl()
        .equals(other.getSsl())) return false;
    if (!getNeedThumbs()
        .equals(other.getNeedThumbs())) return false;
    if (!getNeedBarrageMask()
        .equals(other.getNeedBarrageMask())) return false;
    if (!getCdnType()
        .equals(other.getCdnType())) return false;
    if (!getUnionInfo()
        .equals(other.getUnionInfo())) return false;
    if (!getHDRDefinition()
        .equals(other.getHDRDefinition())) return false;
    if (!getPlayScene()
        .equals(other.getPlayScene())) return false;
    if (!getDrmExpireTimestamp()
        .equals(other.getDrmExpireTimestamp())) return false;
    if (!getQuality()
        .equals(other.getQuality())) return false;
    if (!getPlayConfig()
        .equals(other.getPlayConfig())) return false;
    if (!getNeedOriginal()
        .equals(other.getNeedOriginal())) return false;
    if (!getForceExpire()
        .equals(other.getForceExpire())) return false;
    if (getGetAll()
        != other.getGetAll()) return false;
    if (!getDigitalWatermarkType()
        .equals(other.getDigitalWatermarkType())) return false;
    if (!getUserToken()
        .equals(other.getUserToken())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VID_FIELD_NUMBER;
    hash = (53 * hash) + getVid().hashCode();
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + getFormat().hashCode();
    hash = (37 * hash) + CODEC_FIELD_NUMBER;
    hash = (53 * hash) + getCodec().hashCode();
    hash = (37 * hash) + DEFINITION_FIELD_NUMBER;
    hash = (53 * hash) + getDefinition().hashCode();
    hash = (37 * hash) + FILETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getFileType().hashCode();
    hash = (37 * hash) + LOGOTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getLogoType().hashCode();
    hash = (37 * hash) + BASE64_FIELD_NUMBER;
    hash = (53 * hash) + getBase64().hashCode();
    hash = (37 * hash) + SSL_FIELD_NUMBER;
    hash = (53 * hash) + getSsl().hashCode();
    hash = (37 * hash) + NEEDTHUMBS_FIELD_NUMBER;
    hash = (53 * hash) + getNeedThumbs().hashCode();
    hash = (37 * hash) + NEEDBARRAGEMASK_FIELD_NUMBER;
    hash = (53 * hash) + getNeedBarrageMask().hashCode();
    hash = (37 * hash) + CDNTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCdnType().hashCode();
    hash = (37 * hash) + UNIONINFO_FIELD_NUMBER;
    hash = (53 * hash) + getUnionInfo().hashCode();
    hash = (37 * hash) + HDRDEFINITION_FIELD_NUMBER;
    hash = (53 * hash) + getHDRDefinition().hashCode();
    hash = (37 * hash) + PLAYSCENE_FIELD_NUMBER;
    hash = (53 * hash) + getPlayScene().hashCode();
    hash = (37 * hash) + DRMEXPIRETIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + getDrmExpireTimestamp().hashCode();
    hash = (37 * hash) + QUALITY_FIELD_NUMBER;
    hash = (53 * hash) + getQuality().hashCode();
    hash = (37 * hash) + PLAYCONFIG_FIELD_NUMBER;
    hash = (53 * hash) + getPlayConfig().hashCode();
    hash = (37 * hash) + NEEDORIGINAL_FIELD_NUMBER;
    hash = (53 * hash) + getNeedOriginal().hashCode();
    hash = (37 * hash) + FORCEEXPIRE_FIELD_NUMBER;
    hash = (53 * hash) + getForceExpire().hashCode();
    hash = (37 * hash) + GETALL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getGetAll());
    hash = (37 * hash) + DIGITALWATERMARKTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getDigitalWatermarkType().hashCode();
    hash = (37 * hash) + USERTOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getUserToken().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.volcengine.service.vod.model.request.VodGetPlayInfoRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Volcengine.Vod.Models.Request.VodGetPlayInfoRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Volcengine.Vod.Models.Request.VodGetPlayInfoRequest)
      com.volcengine.service.vod.model.request.VodGetPlayInfoRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodGetPlayInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodGetPlayInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.class, com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.Builder.class);
    }

    // Construct using com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      vid_ = "";

      format_ = "";

      codec_ = "";

      definition_ = "";

      fileType_ = "";

      logoType_ = "";

      base64_ = "";

      ssl_ = "";

      needThumbs_ = "";

      needBarrageMask_ = "";

      cdnType_ = "";

      unionInfo_ = "";

      hDRDefinition_ = "";

      playScene_ = "";

      drmExpireTimestamp_ = "";

      quality_ = "";

      playConfig_ = "";

      needOriginal_ = "";

      forceExpire_ = "";

      getAll_ = false;

      digitalWatermarkType_ = "";

      userToken_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodGetPlayInfoRequest_descriptor;
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodGetPlayInfoRequest getDefaultInstanceForType() {
      return com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodGetPlayInfoRequest build() {
      com.volcengine.service.vod.model.request.VodGetPlayInfoRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodGetPlayInfoRequest buildPartial() {
      com.volcengine.service.vod.model.request.VodGetPlayInfoRequest result = new com.volcengine.service.vod.model.request.VodGetPlayInfoRequest(this);
      result.vid_ = vid_;
      result.format_ = format_;
      result.codec_ = codec_;
      result.definition_ = definition_;
      result.fileType_ = fileType_;
      result.logoType_ = logoType_;
      result.base64_ = base64_;
      result.ssl_ = ssl_;
      result.needThumbs_ = needThumbs_;
      result.needBarrageMask_ = needBarrageMask_;
      result.cdnType_ = cdnType_;
      result.unionInfo_ = unionInfo_;
      result.hDRDefinition_ = hDRDefinition_;
      result.playScene_ = playScene_;
      result.drmExpireTimestamp_ = drmExpireTimestamp_;
      result.quality_ = quality_;
      result.playConfig_ = playConfig_;
      result.needOriginal_ = needOriginal_;
      result.forceExpire_ = forceExpire_;
      result.getAll_ = getAll_;
      result.digitalWatermarkType_ = digitalWatermarkType_;
      result.userToken_ = userToken_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.volcengine.service.vod.model.request.VodGetPlayInfoRequest) {
        return mergeFrom((com.volcengine.service.vod.model.request.VodGetPlayInfoRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.volcengine.service.vod.model.request.VodGetPlayInfoRequest other) {
      if (other == com.volcengine.service.vod.model.request.VodGetPlayInfoRequest.getDefaultInstance()) return this;
      if (!other.getVid().isEmpty()) {
        vid_ = other.vid_;
        onChanged();
      }
      if (!other.getFormat().isEmpty()) {
        format_ = other.format_;
        onChanged();
      }
      if (!other.getCodec().isEmpty()) {
        codec_ = other.codec_;
        onChanged();
      }
      if (!other.getDefinition().isEmpty()) {
        definition_ = other.definition_;
        onChanged();
      }
      if (!other.getFileType().isEmpty()) {
        fileType_ = other.fileType_;
        onChanged();
      }
      if (!other.getLogoType().isEmpty()) {
        logoType_ = other.logoType_;
        onChanged();
      }
      if (!other.getBase64().isEmpty()) {
        base64_ = other.base64_;
        onChanged();
      }
      if (!other.getSsl().isEmpty()) {
        ssl_ = other.ssl_;
        onChanged();
      }
      if (!other.getNeedThumbs().isEmpty()) {
        needThumbs_ = other.needThumbs_;
        onChanged();
      }
      if (!other.getNeedBarrageMask().isEmpty()) {
        needBarrageMask_ = other.needBarrageMask_;
        onChanged();
      }
      if (!other.getCdnType().isEmpty()) {
        cdnType_ = other.cdnType_;
        onChanged();
      }
      if (!other.getUnionInfo().isEmpty()) {
        unionInfo_ = other.unionInfo_;
        onChanged();
      }
      if (!other.getHDRDefinition().isEmpty()) {
        hDRDefinition_ = other.hDRDefinition_;
        onChanged();
      }
      if (!other.getPlayScene().isEmpty()) {
        playScene_ = other.playScene_;
        onChanged();
      }
      if (!other.getDrmExpireTimestamp().isEmpty()) {
        drmExpireTimestamp_ = other.drmExpireTimestamp_;
        onChanged();
      }
      if (!other.getQuality().isEmpty()) {
        quality_ = other.quality_;
        onChanged();
      }
      if (!other.getPlayConfig().isEmpty()) {
        playConfig_ = other.playConfig_;
        onChanged();
      }
      if (!other.getNeedOriginal().isEmpty()) {
        needOriginal_ = other.needOriginal_;
        onChanged();
      }
      if (!other.getForceExpire().isEmpty()) {
        forceExpire_ = other.forceExpire_;
        onChanged();
      }
      if (other.getGetAll() != false) {
        setGetAll(other.getGetAll());
      }
      if (!other.getDigitalWatermarkType().isEmpty()) {
        digitalWatermarkType_ = other.digitalWatermarkType_;
        onChanged();
      }
      if (!other.getUserToken().isEmpty()) {
        userToken_ = other.userToken_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.volcengine.service.vod.model.request.VodGetPlayInfoRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.volcengine.service.vod.model.request.VodGetPlayInfoRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object vid_ = "";
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return The vid.
     */
    public java.lang.String getVid() {
      java.lang.Object ref = vid_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vid_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return The bytes for vid.
     */
    public com.google.protobuf.ByteString
        getVidBytes() {
      java.lang.Object ref = vid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @param value The vid to set.
     * @return This builder for chaining.
     */
    public Builder setVid(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVid() {
      
      vid_ = getDefaultInstance().getVid();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频ID 
     * </pre>
     *
     * <code>string Vid = 1;</code>
     * @param value The bytes for vid to set.
     * @return This builder for chaining.
     */
    public Builder setVidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vid_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object format_ = "";
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
     * </pre>
     *
     * <code>string Format = 2;</code>
     * @return The format.
     */
    public java.lang.String getFormat() {
      java.lang.Object ref = format_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        format_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
     * </pre>
     *
     * <code>string Format = 2;</code>
     * @return The bytes for format.
     */
    public com.google.protobuf.ByteString
        getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
     * </pre>
     *
     * <code>string Format = 2;</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      format_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
     * </pre>
     *
     * <code>string Format = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      
      format_ = getDefaultInstance().getFormat();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 封装格式，支持 mp4、dash、hls、mp3、m4a、ogg, 默认mp4 
     * </pre>
     *
     * <code>string Format = 2;</code>
     * @param value The bytes for format to set.
     * @return This builder for chaining.
     */
    public Builder setFormatBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      format_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object codec_ = "";
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
     * </pre>
     *
     * <code>string Codec = 3;</code>
     * @return The codec.
     */
    public java.lang.String getCodec() {
      java.lang.Object ref = codec_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        codec_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
     * </pre>
     *
     * <code>string Codec = 3;</code>
     * @return The bytes for codec.
     */
    public com.google.protobuf.ByteString
        getCodecBytes() {
      java.lang.Object ref = codec_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        codec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
     * </pre>
     *
     * <code>string Codec = 3;</code>
     * @param value The codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodec(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      codec_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
     * </pre>
     *
     * <code>string Codec = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCodec() {
      
      codec_ = getDefaultInstance().getCodec();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 编码格式，支持 mp3、aac、opus、H264、H265、H266, 视频默认H264，音频默认aac
     * </pre>
     *
     * <code>string Codec = 3;</code>
     * @param value The bytes for codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodecBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      codec_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object definition_ = "";
    /**
     * <pre>
     * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
     * </pre>
     *
     * <code>string Definition = 4;</code>
     * @return The definition.
     */
    public java.lang.String getDefinition() {
      java.lang.Object ref = definition_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        definition_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
     * </pre>
     *
     * <code>string Definition = 4;</code>
     * @return The bytes for definition.
     */
    public com.google.protobuf.ByteString
        getDefinitionBytes() {
      java.lang.Object ref = definition_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        definition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
     * </pre>
     *
     * <code>string Definition = 4;</code>
     * @param value The definition to set.
     * @return This builder for chaining.
     */
    public Builder setDefinition(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      definition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
     * </pre>
     *
     * <code>string Definition = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefinition() {
      
      definition_ = getDefaultInstance().getDefinition();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 视频流清晰度，支持：240p,360p,480p,540p,720p,1080p,2k,4k,od,oe,auto.默认返回全部
     * </pre>
     *
     * <code>string Definition = 4;</code>
     * @param value The bytes for definition to set.
     * @return This builder for chaining.
     */
    public Builder setDefinitionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      definition_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fileType_ = "";
    /**
     * <pre>
     * 流文件类型,支持:
     * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
     * </pre>
     *
     * <code>string FileType = 5;</code>
     * @return The fileType.
     */
    public java.lang.String getFileType() {
      java.lang.Object ref = fileType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 流文件类型,支持:
     * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
     * </pre>
     *
     * <code>string FileType = 5;</code>
     * @return The bytes for fileType.
     */
    public com.google.protobuf.ByteString
        getFileTypeBytes() {
      java.lang.Object ref = fileType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 流文件类型,支持:
     * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
     * </pre>
     *
     * <code>string FileType = 5;</code>
     * @param value The fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 流文件类型,支持:
     * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
     * </pre>
     *
     * <code>string FileType = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileType() {
      
      fileType_ = getDefaultInstance().getFileType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 流文件类型,支持:
     * 加密视频流evideo，加密音频流传eaudio,非加密视频流video,普通音频音频流audio.默认video
     * </pre>
     *
     * <code>string FileType = 5;</code>
     * @param value The bytes for fileType to set.
     * @return This builder for chaining.
     */
    public Builder setFileTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object logoType_ = "";
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoType = 6;</code>
     * @return The logoType.
     */
    public java.lang.String getLogoType() {
      java.lang.Object ref = logoType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logoType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoType = 6;</code>
     * @return The bytes for logoType.
     */
    public com.google.protobuf.ByteString
        getLogoTypeBytes() {
      java.lang.Object ref = logoType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logoType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoType = 6;</code>
     * @param value The logoType to set.
     * @return This builder for chaining.
     */
    public Builder setLogoType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logoType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoType = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogoType() {
      
      logoType_ = getDefaultInstance().getLogoType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 水印贴片标签 
     * </pre>
     *
     * <code>string LogoType = 6;</code>
     * @param value The bytes for logoType to set.
     * @return This builder for chaining.
     */
    public Builder setLogoTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      logoType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object base64_ = "";
    /**
     * <pre>
     * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
     * </pre>
     *
     * <code>string Base64 = 7;</code>
     * @return The base64.
     */
    public java.lang.String getBase64() {
      java.lang.Object ref = base64_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        base64_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
     * </pre>
     *
     * <code>string Base64 = 7;</code>
     * @return The bytes for base64.
     */
    public com.google.protobuf.ByteString
        getBase64Bytes() {
      java.lang.Object ref = base64_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        base64_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
     * </pre>
     *
     * <code>string Base64 = 7;</code>
     * @param value The base64 to set.
     * @return This builder for chaining.
     */
    public Builder setBase64(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      base64_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
     * </pre>
     *
     * <code>string Base64 = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBase64() {
      
      base64_ = getDefaultInstance().getBase64();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放地址是否base64编码，默认否，支持设置： 0-否，1-是 
     * </pre>
     *
     * <code>string Base64 = 7;</code>
     * @param value The bytes for base64 to set.
     * @return This builder for chaining.
     */
    public Builder setBase64Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      base64_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object ssl_ = "";
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return The ssl.
     */
    public java.lang.String getSsl() {
      java.lang.Object ref = ssl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ssl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return The bytes for ssl.
     */
    public com.google.protobuf.ByteString
        getSslBytes() {
      java.lang.Object ref = ssl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @param value The ssl to set.
     * @return This builder for chaining.
     */
    public Builder setSsl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ssl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSsl() {
      
      ssl_ = getDefaultInstance().getSsl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 返回https播放地址，默认否, 1-是；0-否 
     * </pre>
     *
     * <code>string Ssl = 8;</code>
     * @param value The bytes for ssl to set.
     * @return This builder for chaining.
     */
    public Builder setSslBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ssl_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needThumbs_ = "";
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return The needThumbs.
     */
    public java.lang.String getNeedThumbs() {
      java.lang.Object ref = needThumbs_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needThumbs_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return The bytes for needThumbs.
     */
    public com.google.protobuf.ByteString
        getNeedThumbsBytes() {
      java.lang.Object ref = needThumbs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needThumbs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @param value The needThumbs to set.
     * @return This builder for chaining.
     */
    public Builder setNeedThumbs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needThumbs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedThumbs() {
      
      needThumbs_ = getDefaultInstance().getNeedThumbs();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要雪碧图（缩略图），默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedThumbs = 9;</code>
     * @param value The bytes for needThumbs to set.
     * @return This builder for chaining.
     */
    public Builder setNeedThumbsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needThumbs_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needBarrageMask_ = "";
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return The needBarrageMask.
     */
    public java.lang.String getNeedBarrageMask() {
      java.lang.Object ref = needBarrageMask_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needBarrageMask_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return The bytes for needBarrageMask.
     */
    public com.google.protobuf.ByteString
        getNeedBarrageMaskBytes() {
      java.lang.Object ref = needBarrageMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needBarrageMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @param value The needBarrageMask to set.
     * @return This builder for chaining.
     */
    public Builder setNeedBarrageMask(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needBarrageMask_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedBarrageMask() {
      
      needBarrageMask_ = getDefaultInstance().getNeedBarrageMask();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要蒙版弹幕，默认否，1-是；0-否 
     * </pre>
     *
     * <code>string NeedBarrageMask = 10;</code>
     * @param value The bytes for needBarrageMask to set.
     * @return This builder for chaining.
     */
    public Builder setNeedBarrageMaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needBarrageMask_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cdnType_ = "";
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return The cdnType.
     */
    public java.lang.String getCdnType() {
      java.lang.Object ref = cdnType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cdnType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return The bytes for cdnType.
     */
    public com.google.protobuf.ByteString
        getCdnTypeBytes() {
      java.lang.Object ref = cdnType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cdnType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @param value The cdnType to set.
     * @return This builder for chaining.
     */
    public Builder setCdnType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cdnType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearCdnType() {
      
      cdnType_ = getDefaultInstance().getCdnType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 指定CDN类型, 默认不传为普通CDN, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string CdnType = 11;</code>
     * @param value The bytes for cdnType to set.
     * @return This builder for chaining.
     */
    public Builder setCdnTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cdnType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object unionInfo_ = "";
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return The unionInfo.
     */
    public java.lang.String getUnionInfo() {
      java.lang.Object ref = unionInfo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        unionInfo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return The bytes for unionInfo.
     */
    public com.google.protobuf.ByteString
        getUnionInfoBytes() {
      java.lang.Object ref = unionInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unionInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @param value The unionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setUnionInfo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      unionInfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearUnionInfo() {
      
      unionInfo_ = getDefaultInstance().getUnionInfo();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 唯一性标识信息, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string UnionInfo = 12;</code>
     * @param value The bytes for unionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setUnionInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      unionInfo_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object hDRDefinition_ = "";
    /**
     * <pre>
     * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
     * 1080p, 2k, 4k 
     * </pre>
     *
     * <code>string HDRDefinition = 13;</code>
     * @return The hDRDefinition.
     */
    public java.lang.String getHDRDefinition() {
      java.lang.Object ref = hDRDefinition_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hDRDefinition_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
     * 1080p, 2k, 4k 
     * </pre>
     *
     * <code>string HDRDefinition = 13;</code>
     * @return The bytes for hDRDefinition.
     */
    public com.google.protobuf.ByteString
        getHDRDefinitionBytes() {
      java.lang.Object ref = hDRDefinition_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hDRDefinition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
     * 1080p, 2k, 4k 
     * </pre>
     *
     * <code>string HDRDefinition = 13;</code>
     * @param value The hDRDefinition to set.
     * @return This builder for chaining.
     */
    public Builder setHDRDefinition(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hDRDefinition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
     * 1080p, 2k, 4k 
     * </pre>
     *
     * <code>string HDRDefinition = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearHDRDefinition() {
      
      hDRDefinition_ = getDefaultInstance().getHDRDefinition();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * HDR清晰度，默认不查询，支持：all, 240p, 360p, 420p, 480p, 540p, 720p,
     * 1080p, 2k, 4k 
     * </pre>
     *
     * <code>string HDRDefinition = 13;</code>
     * @param value The bytes for hDRDefinition to set.
     * @return This builder for chaining.
     */
    public Builder setHDRDefinitionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hDRDefinition_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object playScene_ = "";
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 14;</code>
     * @return The playScene.
     */
    public java.lang.String getPlayScene() {
      java.lang.Object ref = playScene_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playScene_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 14;</code>
     * @return The bytes for playScene.
     */
    public com.google.protobuf.ByteString
        getPlaySceneBytes() {
      java.lang.Object ref = playScene_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playScene_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 14;</code>
     * @param value The playScene to set.
     * @return This builder for chaining.
     */
    public Builder setPlayScene(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      playScene_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayScene() {
      
      playScene_ = getDefaultInstance().getPlayScene();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 播放场景，指定获取对应场景的音视频流。当前支持：preview-试看 
     * </pre>
     *
     * <code>string PlayScene = 14;</code>
     * @param value The bytes for playScene to set.
     * @return This builder for chaining.
     */
    public Builder setPlaySceneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      playScene_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object drmExpireTimestamp_ = "";
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 15;</code>
     * @return The drmExpireTimestamp.
     */
    public java.lang.String getDrmExpireTimestamp() {
      java.lang.Object ref = drmExpireTimestamp_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        drmExpireTimestamp_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 15;</code>
     * @return The bytes for drmExpireTimestamp.
     */
    public com.google.protobuf.ByteString
        getDrmExpireTimestampBytes() {
      java.lang.Object ref = drmExpireTimestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        drmExpireTimestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 15;</code>
     * @param value The drmExpireTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setDrmExpireTimestamp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      drmExpireTimestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearDrmExpireTimestamp() {
      
      drmExpireTimestamp_ = getDefaultInstance().getDrmExpireTimestamp();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DRM过期时间戳, 若需使用请联系技术支持 
     * </pre>
     *
     * <code>string DrmExpireTimestamp = 15;</code>
     * @param value The bytes for drmExpireTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setDrmExpireTimestampBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      drmExpireTimestamp_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object quality_ = "";
    /**
     * <pre>
     * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
     * higher, highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 16;</code>
     * @return The quality.
     */
    public java.lang.String getQuality() {
      java.lang.Object ref = quality_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        quality_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
     * higher, highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 16;</code>
     * @return The bytes for quality.
     */
    public com.google.protobuf.ByteString
        getQualityBytes() {
      java.lang.Object ref = quality_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        quality_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
     * higher, highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 16;</code>
     * @param value The quality to set.
     * @return This builder for chaining.
     */
    public Builder setQuality(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      quality_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
     * higher, highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuality() {
      
      quality_ = getDefaultInstance().getQuality();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 音频音质。当FileType为audio和eaudio时起作用,表示音频音质参数.支持: medium,
     * higher, highest.默认返回所有音频流
     * </pre>
     *
     * <code>string Quality = 16;</code>
     * @param value The bytes for quality to set.
     * @return This builder for chaining.
     */
    public Builder setQualityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      quality_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object playConfig_ = "";
    /**
     * <pre>
     *播放配置,可指定播放域名
     * </pre>
     *
     * <code>string PlayConfig = 17;</code>
     * @return The playConfig.
     */
    public java.lang.String getPlayConfig() {
      java.lang.Object ref = playConfig_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playConfig_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *播放配置,可指定播放域名
     * </pre>
     *
     * <code>string PlayConfig = 17;</code>
     * @return The bytes for playConfig.
     */
    public com.google.protobuf.ByteString
        getPlayConfigBytes() {
      java.lang.Object ref = playConfig_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playConfig_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *播放配置,可指定播放域名
     * </pre>
     *
     * <code>string PlayConfig = 17;</code>
     * @param value The playConfig to set.
     * @return This builder for chaining.
     */
    public Builder setPlayConfig(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      playConfig_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *播放配置,可指定播放域名
     * </pre>
     *
     * <code>string PlayConfig = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayConfig() {
      
      playConfig_ = getDefaultInstance().getPlayConfig();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *播放配置,可指定播放域名
     * </pre>
     *
     * <code>string PlayConfig = 17;</code>
     * @param value The bytes for playConfig to set.
     * @return This builder for chaining.
     */
    public Builder setPlayConfigBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      playConfig_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object needOriginal_ = "";
    /**
     * <pre>
     *控制是否需要将原片信息置于 VideoInfos 中
     * </pre>
     *
     * <code>string NeedOriginal = 18;</code>
     * @return The needOriginal.
     */
    public java.lang.String getNeedOriginal() {
      java.lang.Object ref = needOriginal_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        needOriginal_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *控制是否需要将原片信息置于 VideoInfos 中
     * </pre>
     *
     * <code>string NeedOriginal = 18;</code>
     * @return The bytes for needOriginal.
     */
    public com.google.protobuf.ByteString
        getNeedOriginalBytes() {
      java.lang.Object ref = needOriginal_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        needOriginal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *控制是否需要将原片信息置于 VideoInfos 中
     * </pre>
     *
     * <code>string NeedOriginal = 18;</code>
     * @param value The needOriginal to set.
     * @return This builder for chaining.
     */
    public Builder setNeedOriginal(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      needOriginal_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *控制是否需要将原片信息置于 VideoInfos 中
     * </pre>
     *
     * <code>string NeedOriginal = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearNeedOriginal() {
      
      needOriginal_ = getDefaultInstance().getNeedOriginal();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *控制是否需要将原片信息置于 VideoInfos 中
     * </pre>
     *
     * <code>string NeedOriginal = 18;</code>
     * @param value The bytes for needOriginal to set.
     * @return This builder for chaining.
     */
    public Builder setNeedOriginalBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      needOriginal_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object forceExpire_ = "";
    /**
     * <pre>
     *强行指定本次请求的时间戳防盗链 单位秒
     * </pre>
     *
     * <code>string ForceExpire = 19;</code>
     * @return The forceExpire.
     */
    public java.lang.String getForceExpire() {
      java.lang.Object ref = forceExpire_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        forceExpire_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *强行指定本次请求的时间戳防盗链 单位秒
     * </pre>
     *
     * <code>string ForceExpire = 19;</code>
     * @return The bytes for forceExpire.
     */
    public com.google.protobuf.ByteString
        getForceExpireBytes() {
      java.lang.Object ref = forceExpire_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        forceExpire_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *强行指定本次请求的时间戳防盗链 单位秒
     * </pre>
     *
     * <code>string ForceExpire = 19;</code>
     * @param value The forceExpire to set.
     * @return This builder for chaining.
     */
    public Builder setForceExpire(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      forceExpire_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *强行指定本次请求的时间戳防盗链 单位秒
     * </pre>
     *
     * <code>string ForceExpire = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearForceExpire() {
      
      forceExpire_ = getDefaultInstance().getForceExpire();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *强行指定本次请求的时间戳防盗链 单位秒
     * </pre>
     *
     * <code>string ForceExpire = 19;</code>
     * @param value The bytes for forceExpire to set.
     * @return This builder for chaining.
     */
    public Builder setForceExpireBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      forceExpire_ = value;
      onChanged();
      return this;
    }

    private boolean getAll_ ;
    /**
     * <pre>
     *获取全部流 默认不开启 开启后将没有降级策略 返回Vid下的所有转码流
     * </pre>
     *
     * <code>bool GetAll = 20;</code>
     * @return The getAll.
     */
    @java.lang.Override
    public boolean getGetAll() {
      return getAll_;
    }
    /**
     * <pre>
     *获取全部流 默认不开启 开启后将没有降级策略 返回Vid下的所有转码流
     * </pre>
     *
     * <code>bool GetAll = 20;</code>
     * @param value The getAll to set.
     * @return This builder for chaining.
     */
    public Builder setGetAll(boolean value) {
      
      getAll_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *获取全部流 默认不开启 开启后将没有降级策略 返回Vid下的所有转码流
     * </pre>
     *
     * <code>bool GetAll = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearGetAll() {
      
      getAll_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object digitalWatermarkType_ = "";
    /**
     * <pre>
     *"数字水印类型。取值：
     *ABTraceStream：AB流溯源水印。"
     * </pre>
     *
     * <code>string DigitalWatermarkType = 21;</code>
     * @return The digitalWatermarkType.
     */
    public java.lang.String getDigitalWatermarkType() {
      java.lang.Object ref = digitalWatermarkType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        digitalWatermarkType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *"数字水印类型。取值：
     *ABTraceStream：AB流溯源水印。"
     * </pre>
     *
     * <code>string DigitalWatermarkType = 21;</code>
     * @return The bytes for digitalWatermarkType.
     */
    public com.google.protobuf.ByteString
        getDigitalWatermarkTypeBytes() {
      java.lang.Object ref = digitalWatermarkType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        digitalWatermarkType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *"数字水印类型。取值：
     *ABTraceStream：AB流溯源水印。"
     * </pre>
     *
     * <code>string DigitalWatermarkType = 21;</code>
     * @param value The digitalWatermarkType to set.
     * @return This builder for chaining.
     */
    public Builder setDigitalWatermarkType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      digitalWatermarkType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *"数字水印类型。取值：
     *ABTraceStream：AB流溯源水印。"
     * </pre>
     *
     * <code>string DigitalWatermarkType = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearDigitalWatermarkType() {
      
      digitalWatermarkType_ = getDefaultInstance().getDigitalWatermarkType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *"数字水印类型。取值：
     *ABTraceStream：AB流溯源水印。"
     * </pre>
     *
     * <code>string DigitalWatermarkType = 21;</code>
     * @param value The bytes for digitalWatermarkType to set.
     * @return This builder for chaining.
     */
    public Builder setDigitalWatermarkTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      digitalWatermarkType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object userToken_ = "";
    /**
     * <pre>
     *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
     * </pre>
     *
     * <code>string UserToken = 22;</code>
     * @return The userToken.
     */
    public java.lang.String getUserToken() {
      java.lang.Object ref = userToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
     * </pre>
     *
     * <code>string UserToken = 22;</code>
     * @return The bytes for userToken.
     */
    public com.google.protobuf.ByteString
        getUserTokenBytes() {
      java.lang.Object ref = userToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
     * </pre>
     *
     * <code>string UserToken = 22;</code>
     * @param value The userToken to set.
     * @return This builder for chaining.
     */
    public Builder setUserToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      userToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
     * </pre>
     *
     * <code>string UserToken = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearUserToken() {
      
      userToken_ = getDefaultInstance().getUserToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *下发AB流时设置的uid，当DigitalWatermarkType=ABTraceStream时需要传入这个参数，在下发的播放地址中会加入点播实时处理的query，并改写TypeA签算的uid。
     * </pre>
     *
     * <code>string UserToken = 22;</code>
     * @param value The bytes for userToken to set.
     * @return This builder for chaining.
     */
    public Builder setUserTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      userToken_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Volcengine.Vod.Models.Request.VodGetPlayInfoRequest)
  }

  // @@protoc_insertion_point(class_scope:Volcengine.Vod.Models.Request.VodGetPlayInfoRequest)
  private static final com.volcengine.service.vod.model.request.VodGetPlayInfoRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.volcengine.service.vod.model.request.VodGetPlayInfoRequest();
  }

  public static com.volcengine.service.vod.model.request.VodGetPlayInfoRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VodGetPlayInfoRequest>
      PARSER = new com.google.protobuf.AbstractParser<VodGetPlayInfoRequest>() {
    @java.lang.Override
    public VodGetPlayInfoRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VodGetPlayInfoRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VodGetPlayInfoRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VodGetPlayInfoRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.volcengine.service.vod.model.request.VodGetPlayInfoRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

