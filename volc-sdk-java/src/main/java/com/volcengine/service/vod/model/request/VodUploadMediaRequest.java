// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: volcengine/vod/request/request_vod.proto

package com.volcengine.service.vod.model.request;

/**
 * Protobuf type {@code Volcengine.Vod.Models.Request.VodUploadMediaRequest}
 */
public final class VodUploadMediaRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Volcengine.Vod.Models.Request.VodUploadMediaRequest)
    VodUploadMediaRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VodUploadMediaRequest.newBuilder() to construct.
  private VodUploadMediaRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VodUploadMediaRequest() {
    spaceName_ = "";
    filePath_ = "";
    callbackArgs_ = "";
    functions_ = "";
    fileName_ = "";
    fileExtension_ = "";
    vodUploadSource_ = "";
    clientNetWorkMode_ = "";
    clientIDCMode_ = "";
    expireTime_ = "";
    uploadHostPrefer_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VodUploadMediaRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VodUploadMediaRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            spaceName_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            filePath_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            callbackArgs_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            functions_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            fileName_ = s;
            break;
          }
          case 48: {

            storageClass_ = input.readInt32();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            fileExtension_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            vodUploadSource_ = s;
            break;
          }
          case 72: {

            uploadStrategy_ = input.readInt32();
            break;
          }
          case 80: {

            parallelNum_ = input.readInt32();
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            clientNetWorkMode_ = s;
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            clientIDCMode_ = s;
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            expireTime_ = s;
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();

            uploadHostPrefer_ = s;
            break;
          }
          case 120: {

            chunkSize_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodUploadMediaRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodUploadMediaRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.volcengine.service.vod.model.request.VodUploadMediaRequest.class, com.volcengine.service.vod.model.request.VodUploadMediaRequest.Builder.class);
  }

  public static final int SPACENAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object spaceName_;
  /**
   * <pre>
   * 上传的空间名 
   * </pre>
   *
   * <code>string SpaceName = 1;</code>
   * @return The spaceName.
   */
  @java.lang.Override
  public java.lang.String getSpaceName() {
    java.lang.Object ref = spaceName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      spaceName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传的空间名 
   * </pre>
   *
   * <code>string SpaceName = 1;</code>
   * @return The bytes for spaceName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSpaceNameBytes() {
    java.lang.Object ref = spaceName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      spaceName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILEPATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object filePath_;
  /**
   * <pre>
   * 上传文件的路径 
   * </pre>
   *
   * <code>string FilePath = 2;</code>
   * @return The filePath.
   */
  @java.lang.Override
  public java.lang.String getFilePath() {
    java.lang.Object ref = filePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传文件的路径 
   * </pre>
   *
   * <code>string FilePath = 2;</code>
   * @return The bytes for filePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFilePathBytes() {
    java.lang.Object ref = filePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CALLBACKARGS_FIELD_NUMBER = 3;
  private volatile java.lang.Object callbackArgs_;
  /**
   * <pre>
   * 业务希望上传透传的信息，会在上传成功时返回给用户 
   * </pre>
   *
   * <code>string CallbackArgs = 3;</code>
   * @return The callbackArgs.
   */
  @java.lang.Override
  public java.lang.String getCallbackArgs() {
    java.lang.Object ref = callbackArgs_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      callbackArgs_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 业务希望上传透传的信息，会在上传成功时返回给用户 
   * </pre>
   *
   * <code>string CallbackArgs = 3;</code>
   * @return The bytes for callbackArgs.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCallbackArgsBytes() {
    java.lang.Object ref = callbackArgs_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      callbackArgs_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FUNCTIONS_FIELD_NUMBER = 4;
  private volatile java.lang.Object functions_;
  /**
   * <pre>
   * 上传的功能函数 
   * </pre>
   *
   * <code>string Functions = 4;</code>
   * @return The functions.
   */
  @java.lang.Override
  public java.lang.String getFunctions() {
    java.lang.Object ref = functions_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      functions_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传的功能函数 
   * </pre>
   *
   * <code>string Functions = 4;</code>
   * @return The bytes for functions.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFunctionsBytes() {
    java.lang.Object ref = functions_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      functions_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILENAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object fileName_;
  /**
   * <pre>
   * 上传的文件在存储中的名字，即 bucket/key 中的 key 
   * </pre>
   *
   * <code>string FileName = 5;</code>
   * @return The fileName.
   */
  @java.lang.Override
  public java.lang.String getFileName() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传的文件在存储中的名字，即 bucket/key 中的 key 
   * </pre>
   *
   * <code>string FileName = 5;</code>
   * @return The bytes for fileName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileNameBytes() {
    java.lang.Object ref = fileName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STORAGECLASS_FIELD_NUMBER = 6;
  private int storageClass_;
  /**
   * <pre>
   * 上传的文件的存储类型，1-标准存储，2-归档存储，非必填参数，默认为标准存储 
   * </pre>
   *
   * <code>int32 StorageClass = 6;</code>
   * @return The storageClass.
   */
  @java.lang.Override
  public int getStorageClass() {
    return storageClass_;
  }

  public static final int FILEEXTENSION_FIELD_NUMBER = 7;
  private volatile java.lang.Object fileExtension_;
  /**
   * <pre>
   * 上传中文件的文件后缀 
   * </pre>
   *
   * <code>string FileExtension = 7;</code>
   * @return The fileExtension.
   */
  @java.lang.Override
  public java.lang.String getFileExtension() {
    java.lang.Object ref = fileExtension_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileExtension_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传中文件的文件后缀 
   * </pre>
   *
   * <code>string FileExtension = 7;</code>
   * @return The bytes for fileExtension.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileExtensionBytes() {
    java.lang.Object ref = fileExtension_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileExtension_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VODUPLOADSOURCE_FIELD_NUMBER = 8;
  private volatile java.lang.Object vodUploadSource_;
  /**
   * <pre>
   * 上传中文件的来源 
   * </pre>
   *
   * <code>string VodUploadSource = 8;</code>
   * @return The vodUploadSource.
   */
  @java.lang.Override
  public java.lang.String getVodUploadSource() {
    java.lang.Object ref = vodUploadSource_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vodUploadSource_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传中文件的来源 
   * </pre>
   *
   * <code>string VodUploadSource = 8;</code>
   * @return The bytes for vodUploadSource.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVodUploadSourceBytes() {
    java.lang.Object ref = vodUploadSource_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      vodUploadSource_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPLOADSTRATEGY_FIELD_NUMBER = 9;
  private int uploadStrategy_;
  /**
   * <pre>
   * 上传策略 
   * </pre>
   *
   * <code>int32 UploadStrategy = 9;</code>
   * @return The uploadStrategy.
   */
  @java.lang.Override
  public int getUploadStrategy() {
    return uploadStrategy_;
  }

  public static final int PARALLELNUM_FIELD_NUMBER = 10;
  private int parallelNum_;
  /**
   * <pre>
   * 分片并发数 
   * </pre>
   *
   * <code>int32 ParallelNum = 10;</code>
   * @return The parallelNum.
   */
  @java.lang.Override
  public int getParallelNum() {
    return parallelNum_;
  }

  public static final int CLIENTNETWORKMODE_FIELD_NUMBER = 11;
  private volatile java.lang.Object clientNetWorkMode_;
  /**
   * <pre>
   * 客户端网络环境 
   * </pre>
   *
   * <code>string ClientNetWorkMode = 11;</code>
   * @return The clientNetWorkMode.
   */
  @java.lang.Override
  public java.lang.String getClientNetWorkMode() {
    java.lang.Object ref = clientNetWorkMode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientNetWorkMode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 客户端网络环境 
   * </pre>
   *
   * <code>string ClientNetWorkMode = 11;</code>
   * @return The bytes for clientNetWorkMode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientNetWorkModeBytes() {
    java.lang.Object ref = clientNetWorkMode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientNetWorkMode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLIENTIDCMODE_FIELD_NUMBER = 12;
  private volatile java.lang.Object clientIDCMode_;
  /**
   * <pre>
   * 客户端机房环境 
   * </pre>
   *
   * <code>string ClientIDCMode = 12;</code>
   * @return The clientIDCMode.
   */
  @java.lang.Override
  public java.lang.String getClientIDCMode() {
    java.lang.Object ref = clientIDCMode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientIDCMode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 客户端机房环境 
   * </pre>
   *
   * <code>string ClientIDCMode = 12;</code>
   * @return The bytes for clientIDCMode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClientIDCModeBytes() {
    java.lang.Object ref = clientIDCMode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientIDCMode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXPIRETIME_FIELD_NUMBER = 13;
  private volatile java.lang.Object expireTime_;
  /**
   * <pre>
   * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
   * 填"9999-12-31T23:59:59Z"表示永不过期.
   * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
   * 示例值:2024-08-30T20:10:11+08:00 
   * </pre>
   *
   * <code>string ExpireTime = 13;</code>
   * @return The expireTime.
   */
  @java.lang.Override
  public java.lang.String getExpireTime() {
    java.lang.Object ref = expireTime_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      expireTime_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
   * 填"9999-12-31T23:59:59Z"表示永不过期.
   * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
   * 示例值:2024-08-30T20:10:11+08:00 
   * </pre>
   *
   * <code>string ExpireTime = 13;</code>
   * @return The bytes for expireTime.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExpireTimeBytes() {
    java.lang.Object ref = expireTime_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      expireTime_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPLOADHOSTPREFER_FIELD_NUMBER = 14;
  private volatile java.lang.Object uploadHostPrefer_;
  /**
   * <pre>
   * 上传域名偏好 
   * </pre>
   *
   * <code>string UploadHostPrefer = 14;</code>
   * @return The uploadHostPrefer.
   */
  @java.lang.Override
  public java.lang.String getUploadHostPrefer() {
    java.lang.Object ref = uploadHostPrefer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uploadHostPrefer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 上传域名偏好 
   * </pre>
   *
   * <code>string UploadHostPrefer = 14;</code>
   * @return The bytes for uploadHostPrefer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUploadHostPreferBytes() {
    java.lang.Object ref = uploadHostPrefer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uploadHostPrefer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHUNKSIZE_FIELD_NUMBER = 15;
  private long chunkSize_;
  /**
   * <pre>
   * 大文件上传分片大小，最小20MB 
   * </pre>
   *
   * <code>int64 ChunkSize = 15;</code>
   * @return The chunkSize.
   */
  @java.lang.Override
  public long getChunkSize() {
    return chunkSize_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spaceName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, spaceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callbackArgs_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, callbackArgs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functions_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, functions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, fileName_);
    }
    if (storageClass_ != 0) {
      output.writeInt32(6, storageClass_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileExtension_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, fileExtension_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vodUploadSource_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, vodUploadSource_);
    }
    if (uploadStrategy_ != 0) {
      output.writeInt32(9, uploadStrategy_);
    }
    if (parallelNum_ != 0) {
      output.writeInt32(10, parallelNum_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientNetWorkMode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, clientNetWorkMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientIDCMode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, clientIDCMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(expireTime_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, expireTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uploadHostPrefer_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, uploadHostPrefer_);
    }
    if (chunkSize_ != 0L) {
      output.writeInt64(15, chunkSize_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(spaceName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, spaceName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filePath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callbackArgs_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, callbackArgs_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(functions_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, functions_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, fileName_);
    }
    if (storageClass_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, storageClass_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileExtension_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, fileExtension_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vodUploadSource_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, vodUploadSource_);
    }
    if (uploadStrategy_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, uploadStrategy_);
    }
    if (parallelNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, parallelNum_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientNetWorkMode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, clientNetWorkMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clientIDCMode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, clientIDCMode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(expireTime_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, expireTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uploadHostPrefer_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, uploadHostPrefer_);
    }
    if (chunkSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(15, chunkSize_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.volcengine.service.vod.model.request.VodUploadMediaRequest)) {
      return super.equals(obj);
    }
    com.volcengine.service.vod.model.request.VodUploadMediaRequest other = (com.volcengine.service.vod.model.request.VodUploadMediaRequest) obj;

    if (!getSpaceName()
        .equals(other.getSpaceName())) return false;
    if (!getFilePath()
        .equals(other.getFilePath())) return false;
    if (!getCallbackArgs()
        .equals(other.getCallbackArgs())) return false;
    if (!getFunctions()
        .equals(other.getFunctions())) return false;
    if (!getFileName()
        .equals(other.getFileName())) return false;
    if (getStorageClass()
        != other.getStorageClass()) return false;
    if (!getFileExtension()
        .equals(other.getFileExtension())) return false;
    if (!getVodUploadSource()
        .equals(other.getVodUploadSource())) return false;
    if (getUploadStrategy()
        != other.getUploadStrategy()) return false;
    if (getParallelNum()
        != other.getParallelNum()) return false;
    if (!getClientNetWorkMode()
        .equals(other.getClientNetWorkMode())) return false;
    if (!getClientIDCMode()
        .equals(other.getClientIDCMode())) return false;
    if (!getExpireTime()
        .equals(other.getExpireTime())) return false;
    if (!getUploadHostPrefer()
        .equals(other.getUploadHostPrefer())) return false;
    if (getChunkSize()
        != other.getChunkSize()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SPACENAME_FIELD_NUMBER;
    hash = (53 * hash) + getSpaceName().hashCode();
    hash = (37 * hash) + FILEPATH_FIELD_NUMBER;
    hash = (53 * hash) + getFilePath().hashCode();
    hash = (37 * hash) + CALLBACKARGS_FIELD_NUMBER;
    hash = (53 * hash) + getCallbackArgs().hashCode();
    hash = (37 * hash) + FUNCTIONS_FIELD_NUMBER;
    hash = (53 * hash) + getFunctions().hashCode();
    hash = (37 * hash) + FILENAME_FIELD_NUMBER;
    hash = (53 * hash) + getFileName().hashCode();
    hash = (37 * hash) + STORAGECLASS_FIELD_NUMBER;
    hash = (53 * hash) + getStorageClass();
    hash = (37 * hash) + FILEEXTENSION_FIELD_NUMBER;
    hash = (53 * hash) + getFileExtension().hashCode();
    hash = (37 * hash) + VODUPLOADSOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getVodUploadSource().hashCode();
    hash = (37 * hash) + UPLOADSTRATEGY_FIELD_NUMBER;
    hash = (53 * hash) + getUploadStrategy();
    hash = (37 * hash) + PARALLELNUM_FIELD_NUMBER;
    hash = (53 * hash) + getParallelNum();
    hash = (37 * hash) + CLIENTNETWORKMODE_FIELD_NUMBER;
    hash = (53 * hash) + getClientNetWorkMode().hashCode();
    hash = (37 * hash) + CLIENTIDCMODE_FIELD_NUMBER;
    hash = (53 * hash) + getClientIDCMode().hashCode();
    hash = (37 * hash) + EXPIRETIME_FIELD_NUMBER;
    hash = (53 * hash) + getExpireTime().hashCode();
    hash = (37 * hash) + UPLOADHOSTPREFER_FIELD_NUMBER;
    hash = (53 * hash) + getUploadHostPrefer().hashCode();
    hash = (37 * hash) + CHUNKSIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getChunkSize());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.volcengine.service.vod.model.request.VodUploadMediaRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Volcengine.Vod.Models.Request.VodUploadMediaRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Volcengine.Vod.Models.Request.VodUploadMediaRequest)
      com.volcengine.service.vod.model.request.VodUploadMediaRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodUploadMediaRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodUploadMediaRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.volcengine.service.vod.model.request.VodUploadMediaRequest.class, com.volcengine.service.vod.model.request.VodUploadMediaRequest.Builder.class);
    }

    // Construct using com.volcengine.service.vod.model.request.VodUploadMediaRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      spaceName_ = "";

      filePath_ = "";

      callbackArgs_ = "";

      functions_ = "";

      fileName_ = "";

      storageClass_ = 0;

      fileExtension_ = "";

      vodUploadSource_ = "";

      uploadStrategy_ = 0;

      parallelNum_ = 0;

      clientNetWorkMode_ = "";

      clientIDCMode_ = "";

      expireTime_ = "";

      uploadHostPrefer_ = "";

      chunkSize_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.volcengine.service.vod.model.request.VodRequest.internal_static_Volcengine_Vod_Models_Request_VodUploadMediaRequest_descriptor;
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodUploadMediaRequest getDefaultInstanceForType() {
      return com.volcengine.service.vod.model.request.VodUploadMediaRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodUploadMediaRequest build() {
      com.volcengine.service.vod.model.request.VodUploadMediaRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.volcengine.service.vod.model.request.VodUploadMediaRequest buildPartial() {
      com.volcengine.service.vod.model.request.VodUploadMediaRequest result = new com.volcengine.service.vod.model.request.VodUploadMediaRequest(this);
      result.spaceName_ = spaceName_;
      result.filePath_ = filePath_;
      result.callbackArgs_ = callbackArgs_;
      result.functions_ = functions_;
      result.fileName_ = fileName_;
      result.storageClass_ = storageClass_;
      result.fileExtension_ = fileExtension_;
      result.vodUploadSource_ = vodUploadSource_;
      result.uploadStrategy_ = uploadStrategy_;
      result.parallelNum_ = parallelNum_;
      result.clientNetWorkMode_ = clientNetWorkMode_;
      result.clientIDCMode_ = clientIDCMode_;
      result.expireTime_ = expireTime_;
      result.uploadHostPrefer_ = uploadHostPrefer_;
      result.chunkSize_ = chunkSize_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.volcengine.service.vod.model.request.VodUploadMediaRequest) {
        return mergeFrom((com.volcengine.service.vod.model.request.VodUploadMediaRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.volcengine.service.vod.model.request.VodUploadMediaRequest other) {
      if (other == com.volcengine.service.vod.model.request.VodUploadMediaRequest.getDefaultInstance()) return this;
      if (!other.getSpaceName().isEmpty()) {
        spaceName_ = other.spaceName_;
        onChanged();
      }
      if (!other.getFilePath().isEmpty()) {
        filePath_ = other.filePath_;
        onChanged();
      }
      if (!other.getCallbackArgs().isEmpty()) {
        callbackArgs_ = other.callbackArgs_;
        onChanged();
      }
      if (!other.getFunctions().isEmpty()) {
        functions_ = other.functions_;
        onChanged();
      }
      if (!other.getFileName().isEmpty()) {
        fileName_ = other.fileName_;
        onChanged();
      }
      if (other.getStorageClass() != 0) {
        setStorageClass(other.getStorageClass());
      }
      if (!other.getFileExtension().isEmpty()) {
        fileExtension_ = other.fileExtension_;
        onChanged();
      }
      if (!other.getVodUploadSource().isEmpty()) {
        vodUploadSource_ = other.vodUploadSource_;
        onChanged();
      }
      if (other.getUploadStrategy() != 0) {
        setUploadStrategy(other.getUploadStrategy());
      }
      if (other.getParallelNum() != 0) {
        setParallelNum(other.getParallelNum());
      }
      if (!other.getClientNetWorkMode().isEmpty()) {
        clientNetWorkMode_ = other.clientNetWorkMode_;
        onChanged();
      }
      if (!other.getClientIDCMode().isEmpty()) {
        clientIDCMode_ = other.clientIDCMode_;
        onChanged();
      }
      if (!other.getExpireTime().isEmpty()) {
        expireTime_ = other.expireTime_;
        onChanged();
      }
      if (!other.getUploadHostPrefer().isEmpty()) {
        uploadHostPrefer_ = other.uploadHostPrefer_;
        onChanged();
      }
      if (other.getChunkSize() != 0L) {
        setChunkSize(other.getChunkSize());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.volcengine.service.vod.model.request.VodUploadMediaRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.volcengine.service.vod.model.request.VodUploadMediaRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object spaceName_ = "";
    /**
     * <pre>
     * 上传的空间名 
     * </pre>
     *
     * <code>string SpaceName = 1;</code>
     * @return The spaceName.
     */
    public java.lang.String getSpaceName() {
      java.lang.Object ref = spaceName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        spaceName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传的空间名 
     * </pre>
     *
     * <code>string SpaceName = 1;</code>
     * @return The bytes for spaceName.
     */
    public com.google.protobuf.ByteString
        getSpaceNameBytes() {
      java.lang.Object ref = spaceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        spaceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传的空间名 
     * </pre>
     *
     * <code>string SpaceName = 1;</code>
     * @param value The spaceName to set.
     * @return This builder for chaining.
     */
    public Builder setSpaceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      spaceName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的空间名 
     * </pre>
     *
     * <code>string SpaceName = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpaceName() {
      
      spaceName_ = getDefaultInstance().getSpaceName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的空间名 
     * </pre>
     *
     * <code>string SpaceName = 1;</code>
     * @param value The bytes for spaceName to set.
     * @return This builder for chaining.
     */
    public Builder setSpaceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      spaceName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object filePath_ = "";
    /**
     * <pre>
     * 上传文件的路径 
     * </pre>
     *
     * <code>string FilePath = 2;</code>
     * @return The filePath.
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传文件的路径 
     * </pre>
     *
     * <code>string FilePath = 2;</code>
     * @return The bytes for filePath.
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传文件的路径 
     * </pre>
     *
     * <code>string FilePath = 2;</code>
     * @param value The filePath to set.
     * @return This builder for chaining.
     */
    public Builder setFilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传文件的路径 
     * </pre>
     *
     * <code>string FilePath = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFilePath() {
      
      filePath_ = getDefaultInstance().getFilePath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传文件的路径 
     * </pre>
     *
     * <code>string FilePath = 2;</code>
     * @param value The bytes for filePath to set.
     * @return This builder for chaining.
     */
    public Builder setFilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filePath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object callbackArgs_ = "";
    /**
     * <pre>
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     * </pre>
     *
     * <code>string CallbackArgs = 3;</code>
     * @return The callbackArgs.
     */
    public java.lang.String getCallbackArgs() {
      java.lang.Object ref = callbackArgs_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callbackArgs_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     * </pre>
     *
     * <code>string CallbackArgs = 3;</code>
     * @return The bytes for callbackArgs.
     */
    public com.google.protobuf.ByteString
        getCallbackArgsBytes() {
      java.lang.Object ref = callbackArgs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callbackArgs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     * </pre>
     *
     * <code>string CallbackArgs = 3;</code>
     * @param value The callbackArgs to set.
     * @return This builder for chaining.
     */
    public Builder setCallbackArgs(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      callbackArgs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     * </pre>
     *
     * <code>string CallbackArgs = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCallbackArgs() {
      
      callbackArgs_ = getDefaultInstance().getCallbackArgs();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     * </pre>
     *
     * <code>string CallbackArgs = 3;</code>
     * @param value The bytes for callbackArgs to set.
     * @return This builder for chaining.
     */
    public Builder setCallbackArgsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      callbackArgs_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object functions_ = "";
    /**
     * <pre>
     * 上传的功能函数 
     * </pre>
     *
     * <code>string Functions = 4;</code>
     * @return The functions.
     */
    public java.lang.String getFunctions() {
      java.lang.Object ref = functions_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        functions_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传的功能函数 
     * </pre>
     *
     * <code>string Functions = 4;</code>
     * @return The bytes for functions.
     */
    public com.google.protobuf.ByteString
        getFunctionsBytes() {
      java.lang.Object ref = functions_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        functions_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传的功能函数 
     * </pre>
     *
     * <code>string Functions = 4;</code>
     * @param value The functions to set.
     * @return This builder for chaining.
     */
    public Builder setFunctions(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      functions_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的功能函数 
     * </pre>
     *
     * <code>string Functions = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFunctions() {
      
      functions_ = getDefaultInstance().getFunctions();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的功能函数 
     * </pre>
     *
     * <code>string Functions = 4;</code>
     * @param value The bytes for functions to set.
     * @return This builder for chaining.
     */
    public Builder setFunctionsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      functions_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object fileName_ = "";
    /**
     * <pre>
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     * </pre>
     *
     * <code>string FileName = 5;</code>
     * @return The fileName.
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     * </pre>
     *
     * <code>string FileName = 5;</code>
     * @return The bytes for fileName.
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     * </pre>
     *
     * <code>string FileName = 5;</code>
     * @param value The fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     * </pre>
     *
     * <code>string FileName = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileName() {
      
      fileName_ = getDefaultInstance().getFileName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     * </pre>
     *
     * <code>string FileName = 5;</code>
     * @param value The bytes for fileName to set.
     * @return This builder for chaining.
     */
    public Builder setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileName_ = value;
      onChanged();
      return this;
    }

    private int storageClass_ ;
    /**
     * <pre>
     * 上传的文件的存储类型，1-标准存储，2-归档存储，非必填参数，默认为标准存储 
     * </pre>
     *
     * <code>int32 StorageClass = 6;</code>
     * @return The storageClass.
     */
    @java.lang.Override
    public int getStorageClass() {
      return storageClass_;
    }
    /**
     * <pre>
     * 上传的文件的存储类型，1-标准存储，2-归档存储，非必填参数，默认为标准存储 
     * </pre>
     *
     * <code>int32 StorageClass = 6;</code>
     * @param value The storageClass to set.
     * @return This builder for chaining.
     */
    public Builder setStorageClass(int value) {
      
      storageClass_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传的文件的存储类型，1-标准存储，2-归档存储，非必填参数，默认为标准存储 
     * </pre>
     *
     * <code>int32 StorageClass = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearStorageClass() {
      
      storageClass_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object fileExtension_ = "";
    /**
     * <pre>
     * 上传中文件的文件后缀 
     * </pre>
     *
     * <code>string FileExtension = 7;</code>
     * @return The fileExtension.
     */
    public java.lang.String getFileExtension() {
      java.lang.Object ref = fileExtension_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileExtension_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传中文件的文件后缀 
     * </pre>
     *
     * <code>string FileExtension = 7;</code>
     * @return The bytes for fileExtension.
     */
    public com.google.protobuf.ByteString
        getFileExtensionBytes() {
      java.lang.Object ref = fileExtension_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExtension_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传中文件的文件后缀 
     * </pre>
     *
     * <code>string FileExtension = 7;</code>
     * @param value The fileExtension to set.
     * @return This builder for chaining.
     */
    public Builder setFileExtension(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fileExtension_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传中文件的文件后缀 
     * </pre>
     *
     * <code>string FileExtension = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearFileExtension() {
      
      fileExtension_ = getDefaultInstance().getFileExtension();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传中文件的文件后缀 
     * </pre>
     *
     * <code>string FileExtension = 7;</code>
     * @param value The bytes for fileExtension to set.
     * @return This builder for chaining.
     */
    public Builder setFileExtensionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fileExtension_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object vodUploadSource_ = "";
    /**
     * <pre>
     * 上传中文件的来源 
     * </pre>
     *
     * <code>string VodUploadSource = 8;</code>
     * @return The vodUploadSource.
     */
    public java.lang.String getVodUploadSource() {
      java.lang.Object ref = vodUploadSource_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vodUploadSource_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传中文件的来源 
     * </pre>
     *
     * <code>string VodUploadSource = 8;</code>
     * @return The bytes for vodUploadSource.
     */
    public com.google.protobuf.ByteString
        getVodUploadSourceBytes() {
      java.lang.Object ref = vodUploadSource_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vodUploadSource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传中文件的来源 
     * </pre>
     *
     * <code>string VodUploadSource = 8;</code>
     * @param value The vodUploadSource to set.
     * @return This builder for chaining.
     */
    public Builder setVodUploadSource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vodUploadSource_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传中文件的来源 
     * </pre>
     *
     * <code>string VodUploadSource = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearVodUploadSource() {
      
      vodUploadSource_ = getDefaultInstance().getVodUploadSource();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传中文件的来源 
     * </pre>
     *
     * <code>string VodUploadSource = 8;</code>
     * @param value The bytes for vodUploadSource to set.
     * @return This builder for chaining.
     */
    public Builder setVodUploadSourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vodUploadSource_ = value;
      onChanged();
      return this;
    }

    private int uploadStrategy_ ;
    /**
     * <pre>
     * 上传策略 
     * </pre>
     *
     * <code>int32 UploadStrategy = 9;</code>
     * @return The uploadStrategy.
     */
    @java.lang.Override
    public int getUploadStrategy() {
      return uploadStrategy_;
    }
    /**
     * <pre>
     * 上传策略 
     * </pre>
     *
     * <code>int32 UploadStrategy = 9;</code>
     * @param value The uploadStrategy to set.
     * @return This builder for chaining.
     */
    public Builder setUploadStrategy(int value) {
      
      uploadStrategy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传策略 
     * </pre>
     *
     * <code>int32 UploadStrategy = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadStrategy() {
      
      uploadStrategy_ = 0;
      onChanged();
      return this;
    }

    private int parallelNum_ ;
    /**
     * <pre>
     * 分片并发数 
     * </pre>
     *
     * <code>int32 ParallelNum = 10;</code>
     * @return The parallelNum.
     */
    @java.lang.Override
    public int getParallelNum() {
      return parallelNum_;
    }
    /**
     * <pre>
     * 分片并发数 
     * </pre>
     *
     * <code>int32 ParallelNum = 10;</code>
     * @param value The parallelNum to set.
     * @return This builder for chaining.
     */
    public Builder setParallelNum(int value) {
      
      parallelNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 分片并发数 
     * </pre>
     *
     * <code>int32 ParallelNum = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearParallelNum() {
      
      parallelNum_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object clientNetWorkMode_ = "";
    /**
     * <pre>
     * 客户端网络环境 
     * </pre>
     *
     * <code>string ClientNetWorkMode = 11;</code>
     * @return The clientNetWorkMode.
     */
    public java.lang.String getClientNetWorkMode() {
      java.lang.Object ref = clientNetWorkMode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientNetWorkMode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 客户端网络环境 
     * </pre>
     *
     * <code>string ClientNetWorkMode = 11;</code>
     * @return The bytes for clientNetWorkMode.
     */
    public com.google.protobuf.ByteString
        getClientNetWorkModeBytes() {
      java.lang.Object ref = clientNetWorkMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientNetWorkMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 客户端网络环境 
     * </pre>
     *
     * <code>string ClientNetWorkMode = 11;</code>
     * @param value The clientNetWorkMode to set.
     * @return This builder for chaining.
     */
    public Builder setClientNetWorkMode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientNetWorkMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 客户端网络环境 
     * </pre>
     *
     * <code>string ClientNetWorkMode = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientNetWorkMode() {
      
      clientNetWorkMode_ = getDefaultInstance().getClientNetWorkMode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 客户端网络环境 
     * </pre>
     *
     * <code>string ClientNetWorkMode = 11;</code>
     * @param value The bytes for clientNetWorkMode to set.
     * @return This builder for chaining.
     */
    public Builder setClientNetWorkModeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientNetWorkMode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object clientIDCMode_ = "";
    /**
     * <pre>
     * 客户端机房环境 
     * </pre>
     *
     * <code>string ClientIDCMode = 12;</code>
     * @return The clientIDCMode.
     */
    public java.lang.String getClientIDCMode() {
      java.lang.Object ref = clientIDCMode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientIDCMode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 客户端机房环境 
     * </pre>
     *
     * <code>string ClientIDCMode = 12;</code>
     * @return The bytes for clientIDCMode.
     */
    public com.google.protobuf.ByteString
        getClientIDCModeBytes() {
      java.lang.Object ref = clientIDCMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientIDCMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 客户端机房环境 
     * </pre>
     *
     * <code>string ClientIDCMode = 12;</code>
     * @param value The clientIDCMode to set.
     * @return This builder for chaining.
     */
    public Builder setClientIDCMode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientIDCMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 客户端机房环境 
     * </pre>
     *
     * <code>string ClientIDCMode = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientIDCMode() {
      
      clientIDCMode_ = getDefaultInstance().getClientIDCMode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 客户端机房环境 
     * </pre>
     *
     * <code>string ClientIDCMode = 12;</code>
     * @param value The bytes for clientIDCMode to set.
     * @return This builder for chaining.
     */
    public Builder setClientIDCModeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientIDCMode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object expireTime_ = "";
    /**
     * <pre>
     * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
     * 填"9999-12-31T23:59:59Z"表示永不过期.
     * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
     * 示例值:2024-08-30T20:10:11+08:00 
     * </pre>
     *
     * <code>string ExpireTime = 13;</code>
     * @return The expireTime.
     */
    public java.lang.String getExpireTime() {
      java.lang.Object ref = expireTime_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        expireTime_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
     * 填"9999-12-31T23:59:59Z"表示永不过期.
     * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
     * 示例值:2024-08-30T20:10:11+08:00 
     * </pre>
     *
     * <code>string ExpireTime = 13;</code>
     * @return The bytes for expireTime.
     */
    public com.google.protobuf.ByteString
        getExpireTimeBytes() {
      java.lang.Object ref = expireTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expireTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
     * 填"9999-12-31T23:59:59Z"表示永不过期.
     * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
     * 示例值:2024-08-30T20:10:11+08:00 
     * </pre>
     *
     * <code>string ExpireTime = 13;</code>
     * @param value The expireTime to set.
     * @return This builder for chaining.
     */
    public Builder setExpireTime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      expireTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
     * 填"9999-12-31T23:59:59Z"表示永不过期.
     * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
     * 示例值:2024-08-30T20:10:11+08:00 
     * </pre>
     *
     * <code>string ExpireTime = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpireTime() {
      
      expireTime_ = getDefaultInstance().getExpireTime();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 媒资文件过期时间,采用ISO日期格式. 不传或传空,不修改.
     * 填"9999-12-31T23:59:59Z"表示永不过期.
     * 过期后该媒资文件及其相关资源（转码结果、封面图等）将被永久删除.
     * 示例值:2024-08-30T20:10:11+08:00 
     * </pre>
     *
     * <code>string ExpireTime = 13;</code>
     * @param value The bytes for expireTime to set.
     * @return This builder for chaining.
     */
    public Builder setExpireTimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      expireTime_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object uploadHostPrefer_ = "";
    /**
     * <pre>
     * 上传域名偏好 
     * </pre>
     *
     * <code>string UploadHostPrefer = 14;</code>
     * @return The uploadHostPrefer.
     */
    public java.lang.String getUploadHostPrefer() {
      java.lang.Object ref = uploadHostPrefer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uploadHostPrefer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 上传域名偏好 
     * </pre>
     *
     * <code>string UploadHostPrefer = 14;</code>
     * @return The bytes for uploadHostPrefer.
     */
    public com.google.protobuf.ByteString
        getUploadHostPreferBytes() {
      java.lang.Object ref = uploadHostPrefer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uploadHostPrefer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 上传域名偏好 
     * </pre>
     *
     * <code>string UploadHostPrefer = 14;</code>
     * @param value The uploadHostPrefer to set.
     * @return This builder for chaining.
     */
    public Builder setUploadHostPrefer(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uploadHostPrefer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传域名偏好 
     * </pre>
     *
     * <code>string UploadHostPrefer = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearUploadHostPrefer() {
      
      uploadHostPrefer_ = getDefaultInstance().getUploadHostPrefer();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 上传域名偏好 
     * </pre>
     *
     * <code>string UploadHostPrefer = 14;</code>
     * @param value The bytes for uploadHostPrefer to set.
     * @return This builder for chaining.
     */
    public Builder setUploadHostPreferBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      uploadHostPrefer_ = value;
      onChanged();
      return this;
    }

    private long chunkSize_ ;
    /**
     * <pre>
     * 大文件上传分片大小，最小20MB 
     * </pre>
     *
     * <code>int64 ChunkSize = 15;</code>
     * @return The chunkSize.
     */
    @java.lang.Override
    public long getChunkSize() {
      return chunkSize_;
    }
    /**
     * <pre>
     * 大文件上传分片大小，最小20MB 
     * </pre>
     *
     * <code>int64 ChunkSize = 15;</code>
     * @param value The chunkSize to set.
     * @return This builder for chaining.
     */
    public Builder setChunkSize(long value) {
      
      chunkSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 大文件上传分片大小，最小20MB 
     * </pre>
     *
     * <code>int64 ChunkSize = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearChunkSize() {
      
      chunkSize_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Volcengine.Vod.Models.Request.VodUploadMediaRequest)
  }

  // @@protoc_insertion_point(class_scope:Volcengine.Vod.Models.Request.VodUploadMediaRequest)
  private static final com.volcengine.service.vod.model.request.VodUploadMediaRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.volcengine.service.vod.model.request.VodUploadMediaRequest();
  }

  public static com.volcengine.service.vod.model.request.VodUploadMediaRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VodUploadMediaRequest>
      PARSER = new com.google.protobuf.AbstractParser<VodUploadMediaRequest>() {
    @java.lang.Override
    public VodUploadMediaRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VodUploadMediaRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VodUploadMediaRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VodUploadMediaRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.volcengine.service.vod.model.request.VodUploadMediaRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

